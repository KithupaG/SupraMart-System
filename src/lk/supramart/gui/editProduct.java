/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lk.supramart.gui;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import lk.supramart.controller.InventoryController;
import lk.supramart.model.Product;
import lk.supramart.connection.MySQL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

public class editProduct extends javax.swing.JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(editProduct.class.getName());
    private final InventoryController inventoryController;
    private Product currentProduct;

    /**
     * Creates new form addProduct
     */
    public editProduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setUndecorated(true);
        initComponents();
        inventoryController = new InventoryController();
        setupEventListeners();
        setupSpinners();
        populateComboBoxes();
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(0, 112, 235));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("PRODUCT");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("EDIT");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("SELECTED PRODUCT ID:");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.GridLayout(6, 2, 5, 0));

        jLabel3.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel3.setText("Product Name");
        jPanel5.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel4.setText("Product Category");
        jPanel5.add(jLabel4);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel5.add(jTextField1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel5.add(jComboBox1);

        jLabel5.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel5.setText("Product Supplier");
        jPanel5.add(jLabel5);

        jLabel8.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel8.setText("Product Brand");
        jPanel5.add(jLabel8);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel5.add(jComboBox2);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel5.add(jComboBox4);

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel6.setText("Product Quantity");
        jPanel5.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        jLabel7.setText("Unit Price");
        jPanel5.add(jLabel7);
        jPanel5.add(jSpinner1);
        jPanel5.add(jSpinner2);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.GridLayout(1, 2, 5, 0));

        jButton1.setBackground(new java.awt.Color(0, 122, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save Product");
        jPanel6.add(jButton1);

        jButton2.setBackground(new java.awt.Color(255, 59, 48));
        jButton2.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 307, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 403, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Setup event listeners for buttons
     */
    private void setupEventListeners() {
        jButton1.addActionListener(e -> saveProduct());
        jButton2.addActionListener(e -> cancel());
    }
    
    /**
     * Setup spinners with proper models
     */
    private void setupSpinners() {
        // Setup quantity spinner (integer, 0 to 10000)
        javax.swing.SpinnerNumberModel quantityModel = new javax.swing.SpinnerNumberModel(0, 0, 10000, 1);
        jSpinner1.setModel(quantityModel);
        
        // Setup price spinner (double, 0.0 to 10000.0, step 0.01)
        javax.swing.SpinnerNumberModel priceModel = new javax.swing.SpinnerNumberModel(0.0, 0.0, 10000.0, 0.01);
        jSpinner2.setModel(priceModel);
    }
    
    /**
     * Populate combo boxes with data from database
     */
    private void populateComboBoxes() {
        try {
            // Populate categories
            List<String> categories = inventoryController.getAllCategories();
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Select Category");
            for (String category : categories) {
                jComboBox1.addItem(category);
            }
            
            // Populate suppliers
            List<String> suppliers = inventoryController.getAllSuppliers();
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Supplier");
            for (String supplier : suppliers) {
                jComboBox2.addItem(supplier);
            }
            
            // Populate brands (using a simple list for now)
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Select Brand");
            jComboBox4.addItem("Generic");
            jComboBox4.addItem("Premium");
            jComboBox4.addItem("Standard");
            
            logger.info("Combo boxes populated successfully");
        } catch (Exception e) {
            logger.severe("Error populating combo boxes: " + e.getMessage());
            showStatus("Error loading data: " + e.getMessage(), true);
        }
    }
    
    /**
     * Clear the form
     */
    private void clearForm() {
        jTextField1.setText("");
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jSpinner1.setValue(0);
        jSpinner2.setValue(0.0);
        jLabel12.setText("SELECTED PRODUCT ID: None");
        currentProduct = null;
        showStatus("", false);
    }
    
    /**
     * Show status message
     */
    private void showStatus(String message, boolean isError) {
        jLabel9.setText(message);
        if (isError) {
            jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        } else {
            jLabel9.setForeground(new java.awt.Color(0, 153, 0));
        }
    }
    
    /**
     * Load product data into form
     */
    public void loadProduct(Product product) {
        if (product == null) {
            showStatus("No product selected", true);
            return;
        }
        
        currentProduct = product;
        
        // Update product ID label
        jLabel12.setText("SELECTED PRODUCT ID: " + product.getProductId());
        
        // Populate form fields
        jTextField1.setText(product.getName());
        
        // Set category
        if (product.getCategoryName() != null) {
            for (int i = 0; i < jComboBox1.getItemCount(); i++) {
                if (jComboBox1.getItemAt(i).equals(product.getCategoryName())) {
                    jComboBox1.setSelectedIndex(i);
                    break;
                }
            }
        }
        
        // Set supplier (we'll use a default for now since supplier is not in Product model)
        jComboBox2.setSelectedIndex(0);
        
        // Set brand (we'll use a default for now since brand is not in Product model)
        jComboBox4.setSelectedIndex(0);
        
        // Set quantity and price
        jSpinner1.setValue(product.getStockQuantity());
        jSpinner2.setValue(product.getPrice().doubleValue());
        
        showStatus("Product loaded successfully", false);
        logger.info("Loaded product for editing: " + product.getName() + " (ID: " + product.getProductId() + ")");
    }
    
    /**
     * Validate form inputs
     */
    private boolean validateForm() {
        // Check if product is loaded
        if (currentProduct == null) {
            showStatus("No product selected for editing", true);
            return false;
        }
        
        // Check product name
        String productName = jTextField1.getText().trim();
        if (productName.isEmpty()) {
            showStatus("Product name is required", true);
            return false;
        }
        
        // Check category
        if (jComboBox1.getSelectedIndex() == 0) {
            showStatus("Please select a category", true);
            return false;
        }
        
        // Check supplier
        if (jComboBox2.getSelectedIndex() == 0) {
            showStatus("Please select a supplier", true);
            return false;
        }
        
        // Check brand
        if (jComboBox4.getSelectedIndex() == 0) {
            showStatus("Please select a brand", true);
            return false;
        }
        
        // Check quantity
        int quantity = (Integer) jSpinner1.getValue();
        if (quantity < 0) {
            showStatus("Quantity cannot be negative", true);
            return false;
        }
        
        // Check price
        double price = (Double) jSpinner2.getValue();
        if (price <= 0) {
            showStatus("Price must be greater than 0", true);
            return false;
        }
        
        return true;
    }
    
    /**
     * Get category ID by name
     */
    private int getCategoryIdByName(String categoryName) {
        try {
            String query = "SELECT category_id FROM supramart.product_categories WHERE category_name = ?";
            ResultSet rs = MySQL.executePreparedSearch(query, categoryName);
            if (rs.next()) {
                return rs.getInt("category_id");
            }
        } catch (SQLException ex) {
            logger.severe("Error getting category ID: " + ex.getMessage());
        }
        return -1;
    }
    
    /**
     * Save product functionality
     */
    private void saveProduct() {
        if (!validateForm()) {
            return;
        }
        
        // Get form values
        String productName = jTextField1.getText().trim();
        String categoryName = (String) jComboBox1.getSelectedItem();
        String supplierName = (String) jComboBox2.getSelectedItem();
        String brandName = (String) jComboBox4.getSelectedItem();
        int quantity = (Integer) jSpinner1.getValue();
        double price = (Double) jSpinner2.getValue();
        
        // Get category ID
        int categoryId = getCategoryIdByName(categoryName);
        if (categoryId == -1) {
            showStatus("Invalid category selected", true);
            return;
        }
        
        // Update product object
        currentProduct.setName(productName);
        currentProduct.setCategoryId(categoryId);
        currentProduct.setCategoryName(categoryName);
        currentProduct.setPrice(BigDecimal.valueOf(price));
        currentProduct.setCost(BigDecimal.valueOf(price * 0.8)); // Set cost as 80% of price for now
        currentProduct.setStockQuantity(quantity);
        currentProduct.setReorderLevel(Math.max(1, quantity / 10)); // Set reorder level as 10% of quantity
        
        // Show loading status
        showStatus("Updating product...", false);
        jButton1.setEnabled(false);
        
        // Use SwingWorker for background processing
        SwingWorker<Boolean, Void> worker = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                return inventoryController.updateProduct(currentProduct);
            }
            
            @Override
            protected void done() {
                try {
                    boolean success = get();
                    if (success) {
                        showStatus("Product updated successfully!", false);
                        logger.info("Product updated successfully: " + productName);
                        
                        // Show success dialog
                        javax.swing.JOptionPane.showMessageDialog(editProduct.this,
                            "Product '" + productName + "' has been updated successfully!",
                            "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                        // Close dialog after short delay
                        javax.swing.Timer timer = new javax.swing.Timer(1000, e -> {
                            dispose();
                            ((javax.swing.Timer) e.getSource()).stop();
                        });
                        timer.setRepeats(false);
                        timer.start();
                        
                    } else {
                        showStatus("Failed to update product. Please try again.", true);
                        logger.warning("Failed to update product: " + productName);
                    }
                } catch (Exception e) {
                    showStatus("Error: " + e.getMessage(), true);
                    logger.severe("Error updating product: " + e.getMessage());
                } finally {
                    jButton1.setEnabled(true);
                }
            }
        };
        worker.execute();
    }
    
    /**
     * Cancel button functionality
     */
    private void cancel() {
        dispose();
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        var exitdialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?",
                "Exit Confirmation",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        if (exitdialog == JOptionPane.OK_OPTION) {
            System.exit(0);
            logger.info("User cancelled exit");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            editProduct dialog = new editProduct(new javax.swing.JFrame(), true);
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
