/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lk.supramart.gui;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import lk.supramart.gui.admin.adminDashboard;
import lk.supramart.controller.InventoryController;
import lk.supramart.model.Product;
import lk.supramart.connection.MySQL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.SwingWorker;

public class addProduct extends javax.swing.JDialog{
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(addProduct.class.getName());
    private final InventoryController inventoryController;

    /**
     * Creates new form addProduct
     */
    public addProduct(addProduct aThis, boolean par) {
        setUndecorated(true);
        initComponents();
        inventoryController = new InventoryController();
        setupEventListeners();
        setupSpinners();
        populateComboBoxes();
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(0, 112, 235));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PRODUCT");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADD");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(6, 2, 5, 0));

        jLabel5.setText("Product Name");
        jPanel1.add(jLabel5);

        jLabel6.setText("Product Category");
        jPanel1.add(jLabel6);
        jPanel1.add(jTextField3);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "category" }));
        jPanel1.add(jComboBox1);

        jLabel3.setText("Product Suplier");
        jPanel1.add(jLabel3);

        jLabel4.setText("Product Brand");
        jPanel1.add(jLabel4);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox2);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox4);

        jLabel7.setText("Product Quantity");
        jPanel1.add(jLabel7);

        jLabel8.setText("Unit Price");
        jPanel1.add(jLabel8);
        jPanel1.add(jSpinner1);
        jPanel1.add(jSpinner2);

        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("Status Label if error ( show error message ) else status ( empty by default )");

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jButton6.setBackground(new java.awt.Color(0, 102, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Add");
        jPanel2.add(jButton6);

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("cancel");
        jPanel2.add(jButton7);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 446, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Setup event listeners for buttons
     */
    private void setupEventListeners() {
        jButton6.addActionListener(e -> addProduct());
        jButton7.addActionListener(e -> cancel());
    }
    
    /**
     * Setup spinners with proper models
     */
    private void setupSpinners() {
        // Setup quantity spinner (integer, 0 to 10000)
        javax.swing.SpinnerNumberModel quantityModel = new javax.swing.SpinnerNumberModel(0, 0, 10000, 1);
        jSpinner1.setModel(quantityModel);
        
        // Setup price spinner (double, 0.0 to 10000.0, step 0.01)
        javax.swing.SpinnerNumberModel priceModel = new javax.swing.SpinnerNumberModel(0.0, 0.0, 10000.0, 0.01);
        jSpinner2.setModel(priceModel);
    }
    
    /**
     * Populate combo boxes with data from database
     */
    private void populateComboBoxes() {
        try {
            // Populate categories
            List<String> categories = inventoryController.getAllCategories();
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Select Category");
            for (String category : categories) {
                jComboBox1.addItem(category);
            }
            
            // Populate suppliers
            List<String> suppliers = inventoryController.getAllSuppliers();
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Supplier");
            for (String supplier : suppliers) {
                jComboBox2.addItem(supplier);
            }
            
            // Populate brands (using a simple list for now)
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Select Brand");
            jComboBox4.addItem("Generic");
            jComboBox4.addItem("Premium");
            jComboBox4.addItem("Standard");
            
            logger.info("Combo boxes populated successfully");
        } catch (Exception e) {
            logger.severe("Error populating combo boxes: " + e.getMessage());
            showStatus("Error loading data: " + e.getMessage(), true);
        }
    }
    
    /**
     * Clear the form
     */
    private void clearForm() {
        jTextField3.setText("");
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jSpinner1.setValue(0);
        jSpinner2.setValue(0.0);
        showStatus("", false);
    }
    
    /**
     * Show status message
     */
    private void showStatus(String message, boolean isError) {
        jLabel9.setText(message);
        if (isError) {
            jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        } else {
            jLabel9.setForeground(new java.awt.Color(0, 153, 0));
        }
    }
    
    /**
     * Validate form inputs
     */
    private boolean validateForm() {
        // Check product name
        String productName = jTextField3.getText().trim();
        if (productName.isEmpty()) {
            showStatus("Product name is required", true);
            return false;
        }
        
        // Check category
        if (jComboBox1.getSelectedIndex() == 0) {
            showStatus("Please select a category", true);
            return false;
        }
        
        // Check supplier
        if (jComboBox2.getSelectedIndex() == 0) {
            showStatus("Please select a supplier", true);
            return false;
        }
        
        // Check brand
        if (jComboBox4.getSelectedIndex() == 0) {
            showStatus("Please select a brand", true);
            return false;
        }
        
        // Check quantity
        int quantity = (Integer) jSpinner1.getValue();
        if (quantity < 0) {
            showStatus("Quantity cannot be negative", true);
            return false;
        }
        
        // Check price
        double price = (Double) jSpinner2.getValue();
        if (price <= 0) {
            showStatus("Price must be greater than 0", true);
            return false;
        }
        
        return true;
    }
    
    /**
     * Get category ID by name
     */
    private int getCategoryIdByName(String categoryName) {
        try {
            String query = "SELECT category_id FROM supramart.product_categories WHERE category_name = ?";
            ResultSet rs = MySQL.executePreparedSearch(query, categoryName);
            if (rs.next()) {
                return rs.getInt("category_id");
            }
        } catch (SQLException ex) {
            logger.severe("Error getting category ID: " + ex.getMessage());
        }
        return -1;
    }
    
    /**
     * Add product functionality
     */
    private void addProduct() {
        if (!validateForm()) {
            return;
        }
        
        // Get form values
        String productName = jTextField3.getText().trim();
        String categoryName = (String) jComboBox1.getSelectedItem();
        String supplierName = (String) jComboBox2.getSelectedItem();
        String brandName = (String) jComboBox4.getSelectedItem();
        int quantity = (Integer) jSpinner1.getValue();
        double price = (Double) jSpinner2.getValue();
        
        // Get category ID
        int categoryId = getCategoryIdByName(categoryName);
        if (categoryId == -1) {
            showStatus("Invalid category selected", true);
            return;
        }
        
        // Create product object
        Product product = new Product();
        product.setName(productName);
        product.setCategoryId(categoryId);
        product.setCategoryName(categoryName);
        product.setPrice(BigDecimal.valueOf(price));
        product.setCost(BigDecimal.valueOf(price * 0.8)); // Set cost as 80% of price for now
        product.setStockQuantity(quantity);
        product.setReorderLevel(Math.max(1, quantity / 10)); // Set reorder level as 10% of quantity
        product.setAddedOn(LocalDateTime.now());
        
        // Show loading status
        showStatus("Adding product...", false);
        jButton6.setEnabled(false);
        
        // Use SwingWorker for background processing
        SwingWorker<Boolean, Void> worker = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                return inventoryController.addProduct(product);
            }
            
            @Override
            protected void done() {
                try {
                    boolean success = get();
                    if (success) {
                        showStatus("Product added successfully!", false);
                        logger.info("Product added successfully: " + productName);
                        
                        // Show success dialog
                        javax.swing.JOptionPane.showMessageDialog(addProduct.this,
                            "Product '" + productName + "' has been added successfully!",
                            "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        
                        // Clear form after short delay
                        javax.swing.Timer timer = new javax.swing.Timer(1000, e -> {
                            clearForm();
                            ((javax.swing.Timer) e.getSource()).stop();
                        });
                        timer.setRepeats(false);
                        timer.start();
                        
                    } else {
                        showStatus("Failed to add product. Please try again.", true);
                        logger.warning("Failed to add product: " + productName);
                    }
                } catch (Exception e) {
                    showStatus("Error: " + e.getMessage(), true);
                    logger.severe("Error adding product: " + e.getMessage());
                } finally {
                    jButton6.setEnabled(true);
                }
            }
        };
        worker.execute();
    }
    
    /**
     * Cancel button functionality
     */
    private void cancel() {
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    
    public static addProduct addProduct;
    
    public static void main(String args[]) {
        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                addProduct = new  addProduct(addProduct, true);
                addProduct.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
