/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package lk.supramart.gui.branchManager;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import lk.supramart.connection.MySQL;
import lk.supramart.controller.BranchManagerController;
import lk.supramart.dao.BranchManagerDAOImpl;
import lk.supramart.model.BranchProduct;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import lk.supramart.model.BranchManager;

/**
 *
 * @author kithu
 */
public class exportReport extends javax.swing.JDialog {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(exportReport.class.getName());
    private Map<String, BranchProduct> branchMap = new HashMap<>();

    /**
     * Creates new form exportReport
     */
    public exportReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadBranches();
    }

    private final BranchManagerController controller = new BranchManagerController();
    private final Map<String, String> branchNameToId = new HashMap<>(); // name -> id

    public List<BranchProduct> getAllBranches() throws Exception {
        String sql = "SELECT DISTINCT branch_id, branch_name FROM branches";
        ResultSet rs = MySQL.executePreparedSearch(sql);
        List<BranchProduct> list = new ArrayList<>();

        while (rs.next()) {
            // Create a BranchProduct with dummy values for product fields
            BranchProduct bp = new BranchProduct(
                    rs.getString("branch_id"),
                    rs.getString("branch_name"),
                    0, // productId
                    "", // productName
                    0, // availableStock
                    "" // supplierName
            );
            list.add(bp);
        }

        return list;
    }

    private void loadBranches() {
        try {
            List<BranchManager> branches = controller.getAllBranch();

            branchNameToId.clear(); // important if dialog reused
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

            // Optional: prevent same name appearing twice if DB has accidental dup names
            java.util.Set<String> seenNames = new java.util.HashSet<>();

            for (BranchManager b : branches) {
                String name = b.getName();
                if (seenNames.add(name)) {
                    model.addElement(name);
                    branchNameToId.put(name, b.getId()); // store the branch_id
                }
            }
            branchSelector.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load branches: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        branchSelector = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        branchSelector.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        branchSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchSelectorActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabel1.setText("Select Branch");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(branchSelector, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 289, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(branchSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selectedBranchName = (String) branchSelector.getSelectedItem();
        if (selectedBranchName != null && branchNameToId.containsKey(selectedBranchName)) {
            String selectedBranchId = branchNameToId.get(selectedBranchName);
            try {
                generateBranchReport(selectedBranchId);
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to generate report: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a branch.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void branchSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchSelectorActionPerformed

    }//GEN-LAST:event_branchSelectorActionPerformed

    public void generateBranchReport(String branchId) throws SQLException {
        try {
            // Path to your compiled Jasper file in the classpath
            String reportPath = "/lk/supramart/reports/branchFinanceReports.jasper";

            // Load the compiled report as an InputStream from classpath
            InputStream reportStream = getClass().getResourceAsStream(reportPath);
            if (reportStream == null) {
                throw new IllegalStateException("Report file not found on classpath: " + reportPath
                        + "\nCheck that the file is in src/main/resources/lk/supramart/reports/");
            }

            // Prepare parameters
            Map<String, Object> params = new HashMap<>();
            params.put("branchId", branchId); // must match JR parameter name

            // Get database connection
            Connection conn = MySQL.getConnection();

            // Fill the report directly from InputStream
            JasperPrint print = JasperFillManager.fillReport(reportStream, params, conn);

            // View the report
            JasperViewer.viewReport(print, false);

        } catch (JRException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Failed to generate report: " + e.getMessage(),
                    "Report Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                exportReport dialog = new exportReport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> branchSelector;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
